{"version":3,"sources":["./client-src/$_lazy_route_resource lazy","./client-src/app/app.component.css","./client-src/app/app.component.html","./client-src/app/app.component.ts","./client-src/app/app.module.ts","./client-src/app/constant/user.key.ts","./client-src/app/model/order.ts","./client-src/app/model/orderStatus.ts","./client-src/app/order/OrderStatusesModal.component.ts","./client-src/app/order/order.component.html","./client-src/app/order/order.component.ts","./client-src/app/order/orderModal.component.html","./client-src/app/order/orderModal.component.ts","./client-src/app/order/orderStatusesModal.component.html","./client-src/app/order/orders.component.html","./client-src/app/order/orders.component.ts","./client-src/app/service/auth-guard.service.ts","./client-src/app/service/authentication.service.ts","./client-src/app/service/error.handler.ts","./client-src/app/service/orders.service.ts","./client-src/app/service/user.service.ts","./client-src/app/token.interceptor.ts","./client-src/environments/environment.ts","./client-src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./client-src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client-src/$$_lazy_route_resource lazy\n// module id = ./client-src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client-src/app/app.component.css\n// module id = ./client-src/app/app.component.css\n// module chunks = main","module.exports = \"<div>\\r\\n  <nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"navbar-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\">\\r\\n          <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n          <span class=\\\"icon-bar\\\"></span>\\r\\n          <span class=\\\"icon-bar\\\"></span>\\r\\n          <span class=\\\"icon-bar\\\"></span>\\r\\n        </button>\\r\\n        <a href=\\\"/\\\" class=\\\"navbar-brand\\\">EShipment</a>\\r\\n      </div>\\r\\n      <div class=\\\"navbar-collapse collapse\\\">\\r\\n        <ul class=\\\"nav navbar-nav\\\">\\r\\n          <li><a href=\\\"/\\\">Home</a></li>\\r\\n          <li><a href=\\\"angularHome/\\\">Order</a></li>\\r\\n          <li><a href=\\\"home/about\\\">About</a></li>\\r\\n          <li><a href=\\\"home/contact\\\">Contact</a></li>\\r\\n        </ul>\\r\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n          <li>\\r\\n            <a asp-area=\\\"\\\" title=\\\"Manage\\\">Hello {{userName}}!</a>\\r\\n          </li>\\r\\n          <li>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-link navbar-btn navbar-link\\\" (click)=\\\"onLogoutClick()\\\">\\r\\n              Log out\\r\\n            </button>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n  <br /><br />\\r\\n  <div class=\\\"container body-content\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client-src/app/app.component.html\n// module id = ./client-src/app/app.component.html\n// module chunks = main","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { AuthenticationService } from './service/authentication.service';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { OrdersService } from './service/orders.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\r\n  providers: [AuthenticationService]\n})\nexport class AppComponent implements OnInit{\n  userName: string;\n\n  constructor(private authenticationService: AuthenticationService,\r\n    private route: ActivatedRoute,\r\n    private location: Location,\r\n    private cdRef: ChangeDetectorRef) {\r\n  }\n\n  ngOnInit(): void {\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n    this.userName = user ? user.email : null;\r\n  }\n\n  onLogoutClick() {\r\n    this.authenticationService.logout().subscribe(resp => {\r\n      document.open()\r\n      document.write(resp)\r\n      document.close()\r\n    });\r\n    //this.ordersService.getOrders().subscribe(resp => {\r\n    //  console.log(resp)\r\n    //});\r\n    //localStorage.clear()\r\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client-src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes, CanActivate } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { OrdersComponent } from './order/orders.component';\r\nimport { OrderComponent } from './order/order.component';\nimport { OrderModalComponent } from './order/orderModal.component';\nimport { OrderStatusesModalComponent } from './order/OrderStatusesModal.component';\nimport { TableModule } from 'primeng/table';\nimport { CalendarModule } from 'primeng/calendar';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { DropdownModule } from 'primeng/dropdown';\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from './token.interceptor';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport {\r\n  AuthGuardService\r\n} from './service/auth-guard.service';\nimport { AuthenticationService } from './service/authentication.service';\nimport { OrderStatus } from './model/orderStatus';\r\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OrdersComponent,\n    OrderComponent,\n    OrderModalComponent,\n    OrderStatusesModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    TableModule,\n    CalendarModule,\n    InputTextModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    DropdownModule,\n    RouterModule.forRoot([\r\n      {\r\n        path: 'angularApp',\r\n        component: OrdersComponent,\r\n        canActivate: [AuthGuardService] \r\n      }\r\n    ])\n  ],\n  providers: [\n    AuthGuardService,\n    AuthenticationService,,\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptor,\r\n      multi: true\r\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./client-src/app/app.module.ts","export const idKey: string = 'http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier'\r\nexport const roleKey = 'http://schemas.microsoft.com/ws/2008/06/identity/claims/role'\r\n\n\n\n// WEBPACK FOOTER //\n// ./client-src/app/constant/user.key.ts","import { OrderStatus } from './orderStatus';\r\n\r\nexport class Order {\r\n  id: number;\r\n  applicationUser_Id: string;\r\n  number: string;\r\n  companyName: string;\r\n  mark: string;\r\n  containerNumber: string;\r\n  destination: string;\r\n  dischargedPort: string;\r\n  BLNumber: string;\r\n  ETD: Date;\r\n  ETA: Date;\r\n  numOfGoods: number;\r\n  weight: number;\r\n  measurement: number;\r\n  productDescription: string;\r\n  statuses: OrderStatus[];\r\n  receiveOrderDate: Date;\r\n  constructor();\r\n  constructor(number: string, companyName: string, mark: string, containerNumber: string, destination: string,\r\n    dischargedPort: string, BLNumber: string, ETD: Date, ETA: Date, numOfGoods: number, weight: number,\r\n    measurement: number, productDescription: string, statuses: OrderStatus[], receiveOrderDate: Date);\r\n  constructor(number?: string, companyName?: string, mark?: string, containerNumber?: string, destination?: string,\r\n    dischargedPort?: string, BLNumber?: string, ETD?: Date, ETA?: Date, numOfGoods?: number, weight?: number,\r\n    measurement?: number, productDescription?: string, statuses?: OrderStatus[], receiveOrderDate?: Date) {\r\n    this.number = number;\r\n    this.companyName = companyName;\r\n    this.mark = mark;\r\n    this.containerNumber = containerNumber;\r\n\r\n    this.destination = destination;\r\n    this.dischargedPort = dischargedPort;\r\n    this.BLNumber = BLNumber;\r\n    this.ETD = ETD;\r\n\r\n    this.ETA = ETA;\r\n    this.numOfGoods = numOfGoods;\r\n    this.weight = weight;\r\n    this.measurement = measurement;\r\n\r\n    this.productDescription = productDescription;\r\n    this.statuses = statuses;\r\n    this.receiveOrderDate = receiveOrderDate;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./client-src/app/model/order.ts","export class OrderStatus {\r\n  id: number;\r\n  date: string;\r\n  description: string;\r\n  constructor();\r\n  constructor(id: number, date: string, description: string);\r\n  constructor(id?: number, date?: string, description?: string) {\r\n    this.id = id;\r\n    this.date = date;\r\n    this.description = description;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./client-src/app/model/orderStatus.ts","import { Component, Input, SimpleChanges, forwardRef, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { Order } from '../model/order';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, NG_VALIDATORS, FormControl, Validator } from '@angular/forms';\r\nimport { OrderStatus } from '../model/orderStatus';\r\nimport { OrdersService } from '../service/orders.service';\r\n\r\n@Component({\r\n  selector: 'orderStatusesModal',\r\n  templateUrl: './orderStatusesModal.component.html'\r\n})\r\nexport class OrderStatusesModalComponent implements OnInit {\r\n  @Input() public orderStatuses: OrderStatus[];\r\n  @Input() public showModal: boolean\r\n  @Input() public closeModal: Function\r\n  @Input() public saveOrder: Function\r\n  @Input() public orderStatusDates: Date[]\r\n\r\n  private addStatus: Function;\r\n  private deleteStatus: Function;\r\n\r\n  constructor(private ordersService: OrdersService, private cdRef: ChangeDetectorRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.addStatus = this.onAddStatusClick.bind(this)\r\n    this.deleteStatus = this.onDeleteStatusClick.bind(this)\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n  }\r\n\r\n  public onAddStatusClick(): void {\r\n    this.orderStatuses.push(new OrderStatus(\r\n      0,\r\n      null,\r\n      null\r\n    ))\r\n  }\r\n\r\n  public onDeleteStatusClick(i): void {\r\n    this.orderStatuses.splice(i, 1);\r\n  }\r\n\r\n  // This function is to fix the issue that the UI display doesn't correctly reflect orderStatuses\r\n  // when deleting and then adding some statuses\r\n  customTrackBy(index: number, obj: any): any {\r\n    return index;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./client-src/app/order/OrderStatusesModal.component.ts","module.exports = \"\\r\\n<tr *ngIf=\\\"model\\\">\\r\\n  <td>\\r\\n    {{model.number}}\\r\\n  </td>\\r\\n  <td>\\r\\n    {{model.companyName}}\\r\\n  </td>\\r\\n  <td>\\r\\n    {{model.mark}}\\r\\n  </td>\\r\\n  <td>\\r\\n    {{model.ETD}}\\r\\n  </td>\\r\\n  <td>\\r\\n    {{model.ETA}}\\r\\n  </td>\\r\\n  <td>\\r\\n    {{model.receiveOrderDate}}\\r\\n  </td>\\r\\n  <td>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"onEditClick(index)\\\">\\r\\n      <i class=\\\"fa fa-check-circle-o\\\" aria-hidden=\\\"true\\\"></i>&nbsp;\\r\\n      Edit\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"onDeleteClick(index)\\\">\\r\\n      <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>&nbsp;\\r\\n      Delete\\r\\n    </button>\\r\\n  </td>\\r\\n</tr>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client-src/app/order/order.component.html\n// module id = ./client-src/app/order/order.component.html\n// module chunks = main","import { Component, Input, SimpleChanges, forwardRef, OnInit } from '@angular/core';\r\nimport { Order } from '../model/order';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, NG_VALIDATORS, FormControl, Validator } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'order',\r\n  templateUrl: './order.component.html'\r\n})\r\nexport class OrderComponent implements OnInit {\r\n  @Input() public model: any;\r\n  @Input() public onDeleteClick: Function;\r\n  @Input() public onEditClick: Function;\r\n  @Input() public index: number;\r\n\r\n  submitted = false;\r\n  onSubmit() { this.submitted = true; }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./client-src/app/order/order.component.ts","module.exports = \"\\r\\n<form *ngIf=\\\"order\\\" (ngSubmit)=\\\"saveOrder()\\\" #orderForm=\\\"ngForm\\\">\\r\\n  <div class=\\\"modal\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" [ngStyle]=\\\"setStyle()\\\"\\r\\n       aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">{{title}}</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <label>\\r\\n                User Email\\r\\n              </label>\\r\\n              <br />\\r\\n              <p-dropdown [options]=\\\"userOptions\\\" [(ngModel)]=\\\"order.applicationUser_Id\\\" [filter]=\\\"true\\\" name=\\\"userName\\\"\\r\\n                          filterBy=\\\"value\\\" placeholder=\\\"User Name\\\" autoWidth=\\\"false\\\"\\r\\n                          #userEmail=\\\"ngModel\\\">\\r\\n              </p-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n          <br />\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <label>\\r\\n                Order Number\\r\\n              </label>\\r\\n              <br />\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" pInputText [(ngModel)]=\\\"order.number\\\" name=\\\"number\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <label>\\r\\n                Company Name\\r\\n              </label>\\r\\n              <br />\\r\\n              {{order.companyName}}\\r\\n            </div>\\r\\n          </div>\\r\\n          <br />\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <label>\\r\\n                mark\\r\\n              </label>\\r\\n              <br />\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"order.mark\\\" name=\\\"mark\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <label>\\r\\n                Container Number\\r\\n              </label>\\r\\n              <br />\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"order.containerNumber\\\" name=\\\"containerNumber\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n          <br />\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <label>\\r\\n                Destination\\r\\n              </label>\\r\\n              <br />\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"order.destination\\\" name=\\\"destination\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <label>\\r\\n                Discharged Port\\r\\n              </label>\\r\\n              <br />\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"order.dischargedPort\\\" name=\\\"dischargedPort\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n          <br />\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <label>\\r\\n                BL Number\\r\\n              </label>\\r\\n              <br />\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"order.BLNumber\\\" name=\\\"BLNumber\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <label>\\r\\n                ETD\\r\\n              </label>\\r\\n              <br />\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"order.ETD\\\" name=\\\"ETD\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n          <br />\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <label>\\r\\n                ETA\\r\\n              </label>\\r\\n              <br />\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"order.ETA\\\" name=\\\"ETA\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <label>\\r\\n                Num Of Goods\\r\\n              </label>\\r\\n              <br />\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"order.numOfGoods\\\" name=\\\"numOfGoods\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n          <br />\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <label>\\r\\n                Weight\\r\\n              </label>\\r\\n              <br />\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"order.weight\\\" name=\\\"weight\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <label>\\r\\n                Measurement\\r\\n              </label>\\r\\n              <br />\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"order.measurement\\\" name=\\\"measurement\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n          <br />\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <label>\\r\\n                Product Description\\r\\n              </label>\\r\\n              <br />\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"order.productDescription\\\" name=\\\"productDescription\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <label>\\r\\n                Receive Order Date\\r\\n              </label>\\r\\n              <br />\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"order.receiveOrderDate\\\" name=\\\"receiveOrderDate\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeModal()\\\">Close</button>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!orderForm.form.valid\\\">Save changes</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client-src/app/order/orderModal.component.html\n// module id = ./client-src/app/order/orderModal.component.html\n// module chunks = main","import { Component, Input, SimpleChanges, forwardRef, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { Order } from '../model/order';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, NG_VALIDATORS, FormControl, Validator } from '@angular/forms';\r\nimport { UserService } from '../service/user.service';\r\n\r\n@Component({\r\n  selector: 'orderModal',\r\n  templateUrl: './orderModal.component.html',\r\n  styles: ['p-dropdown {width: 269px !important;} p-dropdown /deep/ div:first-child {width: 269px !important;}'],\r\n  providers: [UserService]\r\n})\r\nexport class OrderModalComponent implements OnInit {\r\n  @Input() public order: Order;\r\n  @Input() public userId: string;\r\n  @Input() public showModal: boolean\r\n  @Input() public closeModal: Function\r\n  @Input() public saveOrder: Function\r\n  @Input() public userOptions: [any]\r\n  @Input() public title: string;\r\n  private displayValue: string;\r\n  private windowHeight: number;\r\n\r\n  submitted = false;\r\n  onSubmit() { this.submitted = true; }\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private userService: UserService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.windowHeight = window.innerHeight;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    let userId = changes.userId;\r\n    if (userId && userId.currentValue) {\r\n      this.userService.getUser(userId.currentValue).subscribe(resp => {\r\n        if (this.order != null) {\r\n          this.order.companyName = resp.companyName\r\n        }\r\n      });\r\n    }\r\n    if (userId && !userId.currentValue) {\r\n      if (this.order != null) {\r\n        this.order.companyName = null\r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n  }\r\n\r\n  setStyle() {\r\n    let styles = {\r\n      'max-height': window.innerHeight,\r\n      'overflow': 'auto',\r\n      'display': this.showModal ? 'block' : 'none'\r\n    };\r\n    return styles;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./client-src/app/order/orderModal.component.ts","module.exports = \"<form *ngIf=\\\"orderStatuses\\\" (ngSubmit)=\\\"saveOrder()\\\" #orderStatusesForm=\\\"ngForm\\\">\\r\\n  <div class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n       aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\" [style.display]=\\\"this.showModal ? 'block' : 'none'\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\" style=\\\"\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">Order Status</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addStatus()\\\">\\r\\n                <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\">&nbsp;</i>\\r\\n                Add\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n          <br />\\r\\n          <div class=\\\"row\\\" *ngFor=\\\"let orderStatus of orderStatuses; let i=index; trackBy:customTrackBy\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n              <p-calendar [(ngModel)]=\\\"orderStatusDates[i]\\\" [monthNavigator]=\\\"true\\\" [showIcon]=\\\"true\\\"\\r\\n                          [yearNavigator]=\\\"true\\\" yearRange=\\\"1950:2030\\\" name=\\\"statusDate{{i}}\\\">\\r\\n              </p-calendar>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n              <input type=\\\"text\\\" pInputText [(ngModel)]=\\\"orderStatus.description\\\" name=\\\"statusDescritpion{{i}}\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary btn-xs\\\" (click)=\\\"deleteStatus(i)\\\">\\r\\n                <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>&nbsp;\\r\\n                Delete\\r\\n              </button>\\r\\n            </div>\\r\\n            <br /><br />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeModal()\\\">Close</button>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!orderStatusesForm.form.valid\\\">Save</button>\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n</form>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client-src/app/order/orderStatusesModal.component.html\n// module id = ./client-src/app/order/orderStatusesModal.component.html\n// module chunks = main","module.exports = \"<br/>\\r\\n<div>\\r\\n  <orderModal [showModal]=\\\"showOrderModal\\\" [closeModal]=\\\"closeModal\\\" [saveOrder]=\\\"saveOrder\\\" [order]=\\\"order\\\"\\r\\n              [userOptions]=\\\"userOptions\\\" [title]=\\\"orderModalTitle\\\" [userId]=\\\"order !=null ? order.applicationUser_Id : null\\\">\\r\\n  </orderModal>\\r\\n  <orderStatusesModal [showModal]=\\\"showOrderStatusesModal\\\" [closeModal]=\\\"closeStatusModal\\\"\\r\\n                      [orderStatuses]=\\\"order != null ? order.statuses : null\\\" [saveOrder]=\\\"saveOrder\\\"\\r\\n                      [orderStatusDates]=\\\"orderStatusDates\\\">\\r\\n  </orderStatusesModal>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <p-dropdown [options]=\\\"userOptions\\\" [(ngModel)]=\\\"selectedUser\\\" [filter]=\\\"true\\\"\\r\\n                  filterBy=\\\"value\\\" placeholder=\\\"User Name\\\" showClear=\\\"true\\\">\\r\\n\\r\\n      </p-dropdown>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br />\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <h4 style=\\\"display: inline\\\">Orders:</h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm pull-right\\\" (click)=\\\"onAddClick()\\\">\\r\\n        <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\">&nbsp;</i>\\r\\n        Add\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <p-table [value]=\\\"filteredOrders\\\" [scrollable]=\\\"true\\\" [style]=\\\"{width:'1140'}\\\" scrollHeight=\\\"900px\\\">\\r\\n    <ng-template pTemplate=\\\"colgroup\\\" let-filteredOrders>\\r\\n      <colgroup>\\r\\n        <col style=\\\"width:50px\\\">\\r\\n        <col style=\\\"width:150px\\\">\\r\\n        <col style=\\\"width:150px\\\">\\r\\n        <col style=\\\"width:150px\\\">\\r\\n        <col style=\\\"width:150px\\\">\\r\\n        <col style=\\\"width:150px\\\">\\r\\n        <col style=\\\"width:150px\\\">\\r\\n        <col style=\\\"width:150px\\\">\\r\\n        <col style=\\\"width:150px\\\">\\r\\n        <col style=\\\"width:150px\\\">\\r\\n        <col style=\\\"width:150px\\\">\\r\\n        <col style=\\\"width:150px\\\">\\r\\n        <col style=\\\"width:150px\\\">\\r\\n        <col style=\\\"width:150px\\\">\\r\\n        <col style=\\\"width:150px\\\">\\r\\n        <col style=\\\"width:150px\\\">\\r\\n      </colgroup>\\r\\n    </ng-template>\\r\\n    <ng-template pTemplate=\\\"header\\\" let-order>\\r\\n      <tr>\\r\\n        <th>No.</th>\\r\\n        <th>Company</th>\\r\\n        <th>Mark</th>\\r\\n        <th>Container</th>\\r\\n        <th>Destination</th>\\r\\n        <th>Discharged Port</th>\\r\\n        <th>BL</th>\\r\\n        <th>ETD</th>\\r\\n        <th>ETA</th>\\r\\n        <th>Num Of Goods</th>\\r\\n        <th>Weight</th>\\r\\n        <th>Measurement</th>\\r\\n        <th>Product Description</th>\\r\\n        <th>Status</th>\\r\\n        <th>Receive Order Date</th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n    <ng-template pTemplate=\\\"body\\\" let-order let-columns=\\\"columns\\\" let-i=\\\"rowIndex\\\">\\r\\n      <tr>\\r\\n        <td>\\r\\n          {{order.number}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{order.companyName}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{order.mark}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{order.containerNumber}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{order.destination}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{order.BLNumber}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{order.ETD}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{order.ETA}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{order.numOfGoods}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{order.weight}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{order.measurement}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{order.productDescription}}\\r\\n        </td>\\r\\n        <td>\\r\\n          {{order.OrderStatus}}\\r\\n        </td>\\r\\n        <td>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-xs\\\" (click)=\\\"openStatusesModal(i)\\\">\\r\\n            <i class=\\\"fa fa-edit\\\" aria-hidden=\\\"true\\\"></i>&nbsp;\\r\\n            Open\\r\\n          </button>\\r\\n        </td>\\r\\n        <td>\\r\\n          {{order.receiveOrderDate}}\\r\\n        </td>\\r\\n        <td>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-xs\\\" (click)=\\\"onEditClick(i)\\\">\\r\\n            <i class=\\\"fa fa-edit\\\" aria-hidden=\\\"true\\\"></i>&nbsp;\\r\\n            Edit\\r\\n          </button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-xs\\\" (click)=\\\"onDeleteClick(i)\\\">\\r\\n            <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>&nbsp;\\r\\n            Delete\\r\\n          </button>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n  </p-table>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client-src/app/order/orders.component.html\n// module id = ./client-src/app/order/orders.component.html\n// module chunks = main","import { Component, OnInit, ChangeDetectorRef, AfterViewChecked, ViewChild, SimpleChanges } from '@angular/core';\r\nimport { Order } from '../model/order';\r\nimport { OrdersService } from '../service/orders.service';\r\nimport { UserService } from '../service/user.service';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport 'rxjs/add/operator/switchMap';\r\nimport { NgForm, FormArray } from '@angular/forms'\r\nimport { OrderStatus } from '../model/orderStatus';\r\nimport { idKey, roleKey } from '../constant/user.key'\r\n\r\n@Component({\r\n  selector: 'orders',\r\n  templateUrl: './orders.component.html',\r\n  providers: [OrdersService, UserService]\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n  private orders: Order[];\r\n  private filteredOrders: Order[];\r\n  private showOrderModal: boolean;\r\n  private order: Order;\r\n  private users: [any];\r\n  private userOptions: Array<Object>;\r\n  private selectedUser: string;\r\n  public closeModal: Function;\r\n  public saveOrder: Function;\r\n  private showOrderStatusesModal: boolean;\r\n  private openStatusesModal: Function;\r\n  private closeStatusModal: Function;\r\n  private orderStatusDates: Date[];\r\n  private orderModalTitle: string;\r\n\r\n  constructor(private ordersService: OrdersService,\r\n    private userService: UserService,\r\n    private route: ActivatedRoute,\r\n    private location: Location,\r\n    private cdRef: ChangeDetectorRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log(\"window height=\", window.innerWidth)\r\n    this.ordersService.getOrders().subscribe(resp => {\r\n      this.orders = resp;\r\n    });\r\n    this.userService.getUsers().subscribe(resp => {\r\n      this.users = resp;\r\n      if (this.users != null) {\r\n        this.users.filter(user => {\r\n          // Don't include the admin user in the dropdown options\r\n          let isAdmin = false;\r\n          user.roleNames.some(role => {\r\n            if (role === \"admin\") {\r\n              isAdmin = true\r\n              return true;\r\n            }\r\n          })\r\n          return !isAdmin\r\n        }).map(user => {\r\n          if (this.userOptions == null) {\r\n            this.userOptions = new Array<Object>()\r\n          }\r\n          this.userOptions.push({\r\n            label: user.email,\r\n            value: user.id\r\n          })\r\n        })\r\n      }\r\n    });\r\n    this.route.params.subscribe(params => {\r\n    })\r\n    this.closeModal = this.onColseModalClick.bind(this)\r\n    this.saveOrder = this.onSaveChangeClick.bind(this)\r\n    this.openStatusesModal = this.onOpenStatusesClick.bind(this);\r\n    this.closeStatusModal = this.onCloseStatusClick.bind(this);\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.cdRef.detectChanges()\r\n  }\r\n\r\n  ngDoCheck() {\r\n    this.filteredOrders = this.orders != null ? this.orders.filter(order => {\r\n      return this.selectedUser != null ?  order.applicationUser_Id === this.selectedUser : true\r\n    }) : null\r\n  }\r\n\r\n  public onSaveChangeClick(): void {\r\n    //Convert status Date to string\r\n    if (this.orderStatusDates != null) {\r\n      this.orderStatusDates.map((orderStatusDate, idx) => {\r\n        if (this.order != null && this.order.statuses != null) {\r\n          this.order.statuses[idx].date = orderStatusDate.toDateString();\r\n        }\r\n      })\r\n    }\r\n\r\n    this.ordersService.saveOrder(this.order).subscribe(resp => {\r\n      if (this.order.id == null) {\r\n        this.order.id = resp;\r\n        this.orders.push(this.order);\r\n      }\r\n\r\n      this.showOrderModal = false;\r\n      this.showOrderStatusesModal = false;\r\n    })\r\n  }\r\n\r\n  public onAddClick(): void {\r\n    this.showOrderModal = true;\r\n    this.orderModalTitle = \"Add Order\";\r\n    this.order = new Order()\r\n  }\r\n\r\n  public onDeleteClick(index): void {\r\n    this.ordersService.deleteOrder(this.orders[index].id).subscribe(resp => {\r\n      this.orders.splice(index, 1)\r\n    })\r\n  }\r\n\r\n  //ToDo: Make a copy of orders[index] and keep orders unchanged until saving the changes\r\n  //so that no changes will appear if closing the modal and re-opening it.\r\n  public onEditClick(index: number): void {\r\n    this.showOrderModal = true;\r\n    this.orderModalTitle = \"Edit Order\";\r\n    this.order = this.orders[index]\r\n    this.setOrderStatusDates()\r\n  }\r\n\r\n  public onColseModalClick(): void {\r\n    this.showOrderModal = false;\r\n  }\r\n\r\n  public onOpenStatusesClick(index: number): void {\r\n    this.showOrderStatusesModal = true;\r\n    this.order = this.orders[index];\r\n    this.setOrderStatusDates();\r\n  }\r\n\r\n  private setOrderStatusDates() {\r\n    if (this.order != null && this.order.statuses != null) {\r\n      this.orderStatusDates = []\r\n      this.order.statuses.map(orderStatus => {\r\n        this.orderStatusDates.push(new Date(orderStatus.date))\r\n      })\r\n    }\r\n  }\r\n\r\n  public onCloseStatusClick(): void {\r\n    this.showOrderStatusesModal = false;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./client-src/app/order/orders.component.ts","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthenticationService } from './authentication.service';\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(public auth: AuthenticationService, public router: Router) { }\r\n  canActivate(): boolean {\r\n    if (!this.auth.isAuthenticated()) {\r\n      window.location.href = 'account/login';\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./client-src/app/service/auth-guard.service.ts","import { Injectable } from '@angular/core';\r\nimport { Order } from '../model/order';\r\nimport { Headers, Http } from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\nimport {\r\n  HttpClient, HttpHeaders, HttpErrorResponse, HttpParams\r\n } from '@angular/common/http';\r\nimport {  Observable } from \"rxjs\";\r\nimport { _throw } from 'rxjs/observable/throw';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport * as _ from 'lodash';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  logout(): Observable<any> {\r\n    const body = new HttpParams()\r\n      .set('__RequestVerificationToken', localStorage.getItem('verificationToken'))\r\n    let tokenJson = localStorage.getItem('user')\r\n    let user = JSON.parse(tokenJson)\r\n    let token = user.token\r\n    localStorage.clear()\r\n    return this.http.post('/api/auth/logout', '', {\r\n      headers: new HttpHeaders({\r\n        'Authorization': `Bearer ${token}`,\r\n        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'\r\n      }),\r\n      responseType: 'text'\r\n    })\r\n  }\r\n\r\n  public isAuthenticated(): boolean {\r\n    let jwtHelper: JwtHelperService = new JwtHelperService();\r\n    let userJson = localStorage.getItem('user');\r\n    if (userJson != null) {\r\n      let user = JSON.parse(userJson);\r\n      let token = user.token;\r\n      return !jwtHelper.isTokenExpired(token);\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return _throw(\r\n      'Something bad happened; please try again later.');\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./client-src/app/service/authentication.service.ts","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { _throw } from 'rxjs/observable/throw';\r\n\r\nexport class ErrorHandler {\r\n  public static handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error.error.message} ${error.error.error.stack}`);\r\n    }\r\n    document.write(error.error.text)\r\n    // return an observable with a user-facing error message\r\n    return _throw(\r\n      'Something bad happened; please try again later.');\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./client-src/app/service/error.handler.ts","import { Injectable } from '@angular/core';\r\nimport { Order } from '../model/order';\r\nimport { OrderStatus } from '../model/orderStatus';\r\nimport { Headers, Http } from '@angular/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from \"rxjs\";\r\nimport { _throw } from 'rxjs/observable/throw';\r\nimport { catchError } from 'rxjs/operators';\r\nimport * as _ from 'lodash';\r\nimport { ErrorHandler } from './error.handler'\r\nimport { idKey } from '../constant/user.key'\r\n\r\n@Injectable()\r\nexport class OrdersService {\r\n  private baseUrl = '/api';\r\n  private headers = new Headers({ 'Content-Type': 'application/json' });\r\n  private idKey = 'http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier'\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  getOrders(): Observable<Order[]> {\r\n    let user = JSON.parse(localStorage.getItem('user'))\r\n    return this.http.get<Order[]>(this.baseUrl + '/user/' + user[idKey] + '/orders').pipe(\r\n      catchError(ErrorHandler.handleError))\r\n  }\r\n\r\n  saveOrder(order: Order): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n    let user = JSON.parse(localStorage.getItem('user')) \r\n\r\n    return this.http.post<Order>(this.baseUrl + '/user/' + user[this.idKey] + '/order', order, httpOptions).pipe(\r\n      catchError(ErrorHandler.handleError)\r\n      )\r\n  }\r\n\r\n  deleteOrder(id: number): Observable<any> {\r\n    let user = JSON.parse(localStorage.getItem('user'))\r\n\r\n    return this.http.delete(this.baseUrl + '/user/' + user[this.idKey] + '/order/' + id).pipe(\r\n      catchError(ErrorHandler.handleError)\r\n    )\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./client-src/app/service/orders.service.ts","import { Injectable } from '@angular/core';\r\nimport { Order } from '../model/order';\r\nimport { OrderStatus } from '../model/orderStatus';\r\nimport { Headers, Http } from '@angular/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from \"rxjs\";\r\nimport { catchError } from 'rxjs/operators';\r\nimport * as _ from 'lodash';\r\nimport { ErrorHandler } from './error.handler'\r\nimport { idKey, roleKey } from '../constant/user.key'\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  private baseUrl = '/api';\r\n  private headers = new Headers({ 'Content-Type': 'application/json' });\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  getUsers(): Observable<[any]> {\r\n    let user = JSON.parse(localStorage.getItem('user'))\r\n    return this.http.get<[any]>(this.baseUrl + '/user/' + user[idKey] + '/users').pipe(\r\n      catchError(ErrorHandler.handleError));\r\n  }\r\n\r\n  getUser(userId: string): Observable<any> {\r\n    let user = JSON.parse(localStorage.getItem('user'))\r\n    return this.http.get<any>(this.baseUrl + '/user/' + user[idKey] + '/userToGet/' + userId).pipe(\r\n      catchError(ErrorHandler.handleError));\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./client-src/app/service/user.service.ts","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  constructor() { }\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n    request = user != null ? request.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${user.token}`\r\n      }\r\n    }) : request;\r\n    return next.handle(request);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./client-src/app/token.interceptor.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./client-src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./client-src/main.ts"],"sourceRoot":"webpack:///"}